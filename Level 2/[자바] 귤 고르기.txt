import java.util.*;
class Solution {
    public int solution(int k, int[] tangerine) {
        int answer = 0;
        Integer maxKey = 0;
        Integer maxValue = 0;
        HashMap<Integer,Integer> tangerineMap = new HashMap<>();
        //HashMap<Integer,Integer> boxMap = new HashMap<>();
        HashMap<Integer,Integer> maxMap = new HashMap<>();
        //배열을 해시맵에 넣고 크기별로 개수 정리
        for(int tan:tangerine){
            tangerineMap.put(tan,tangerineMap.getOrDefault(tan,0)+1);
        }
        
        //개수별로 정리
        for(Map.Entry<Integer, Integer> entry : tangerineMap.entrySet()){
            Integer value = entry.getValue();
            maxMap.put(value,maxMap.getOrDefault(value,0)+1);  
        }
        
        

        //k가 1보다 크다면
        while(k>0){
            Set<Integer> hSetInt = maxMap.keySet();
            maxKey = Collections.max(hSetInt);
            maxValue = maxMap.get(maxKey);

            for(int i = 0;i<maxValue;i++){
                k-=maxKey;
                answer++;
                maxMap.put(maxKey,maxMap.get(maxKey)-1);
                if(k<1) return answer;
            }
            maxMap.remove(maxKey);
            //이녀석이 문제
            //maxKey = tangerineMap.keySet().stream()
            //            .max(Comparator.comparing(tangerineMap::get))
            //            .orElse(null);
            //if(k<=tangerineMap.get(maxKey)){
            //    boxMap.put(maxKey,k);
            //    k = 0;
            //}else{
            //    k -= tangerineMap.get(maxKey);
            //    boxMap.put(maxKey,tangerineMap.get(maxKey));
            //    tangerineMap.put(maxKey,0);
                
            //}
            
            
        }
        
        return answer;
    }
}